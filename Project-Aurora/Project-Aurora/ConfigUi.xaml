<fluentWpf:AcrylicWindow
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:fluentWpf="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
             xmlns:auroraRgb="clr-namespace:AuroraRgb"
             xmlns:controls="clr-namespace:AuroraRgb.Settings.Controls"
             x:Class="AuroraRgb.ConfigUi"
             AcrylicWindowStyle="NoIcon"
             FallbackColor="#09000000"
             ExtendViewIntoTitleBar="True"
             AcrylicAccentState="BlurBehind"
             Height="{Binding Source={x:Static auroraRgb:Global.Configuration}, Path=Height, Mode=TwoWay}"
             Width="{Binding Source={x:Static auroraRgb:Global.Configuration}, Path=Width, Mode=TwoWay}"
             Left="{Binding Source={x:Static auroraRgb:Global.Configuration}, Path=Left, Mode=TwoWay}"
             Top="{Binding Source={x:Static auroraRgb:Global.Configuration}, Path=Top, Mode=TwoWay}"
             WindowState="{Binding Source={x:Static auroraRgb:Global.Configuration}, Path=WindowState, Mode=TwoWay}"
             mc:Ignorable="d" Title="Aurora" Loaded="Window_Loaded" Unloaded="Window_Unloaded"
             Closing="Window_Closing" Closed="ConfigUi_OnClosed" Activated="Window_Activated" HorizontalContentAlignment="Stretch"
             MinWidth="800" MinHeight="500" 
             DataContext="{Binding RelativeSource={RelativeSource Self}}" SizeChanged="Window_SizeChanged"
             >
    <WindowChrome.WindowChrome>
        <WindowChrome
            CaptionHeight="20"
            ResizeBorderThickness="8"
            CornerRadius="5"
            GlassFrameThickness="-1"
            UseAeroCaptionButtons="True" />
    </WindowChrome.WindowChrome>
    <DockPanel x:Name="bg_grid" Background="#AA660000" IsHitTestVisible="True">
        <Grid Width="Auto" Height="25" Background="#10000000" DockPanel.Dock="Top" />
        <Grid Name="ProfileStackGrid" HorizontalAlignment="Left" Width="56" Background="#3F000000" DockPanel.Dock="Left" />

        <Grid x:Name="gridManagers" Margin="5,5,0,5" HorizontalAlignment="Left" Width="200" DockPanel.Dock="Left">
            <StackPanel x:Name="stackPanelManagers">
                <Border Background="#A5000000" CornerRadius="8" VerticalAlignment="Top" Height="25" PreviewMouseDown="brdOverview_PreviewMouseDown">
                    <Border Background="#54A8A8A8" CornerRadius="8">
                        <TextBlock TextWrapping="Wrap" Text="Overview" VerticalAlignment="Top" Margin="10,3,10,0"/>
                    </Border>
                </Border>
                <controls:Control_ProfileManager x:Name="ctrlProfileManager" FocusedApplication="{Binding FocusedApplication}"
                                                 Height="25" Margin="0,3,0,0" Background="#00000000" PreviewMouseDown="ctrlProfileManager_PreviewMouseDown" />
                <controls:Control_LayerList Margin="0,3,0,0" Tooltip="These are activated when the program is enabled even when program runs in the background"
                                            SelectedLayer="{Binding SelectedLayer, Mode=TwoWay}"
                                            FocusedApplication="{Binding FocusedApplication}"
                                            LayerCollection="{Binding Path=FocusedApplication.Profile.OverlayLayers}"
                                            Background="#00000000" PreviewMouseDown="ctrlOverlayLayerManager_PreviewMouseDown"
                                            ListTitle="Overlay Layers" />
                <controls:Control_LayerList x:Name="ctrlLayerManager" Margin="0,3,0,0"
                                            SelectedLayer="{Binding SelectedLayer, Mode=TwoWay}"
                                            FocusedApplication="{Binding FocusedApplication}"
                                            LayerCollection="{Binding Path=FocusedApplication.Profile.Layers}"
                                            SecondaryLayerCollection="{Binding FocusedApplication.Profile.Layers_NightTime}"
                                            Background="#00000000" PreviewMouseDown="ctrlLayerManager_PreviewMouseDown" />
            </StackPanel>
        </Grid>
        
        <Grid Margin="5,0,0,0" DockPanel.Dock="Left">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <ContentPresenter Margin="6,4,7,6" Grid.Row="1" Content="{Binding SelectedControl}" />
            <Viewbox x:Name="KeyboardViewbox" StretchDirection="Both" Margin="0,0,7,0">
                <Border Name="KeyboardViewBorder" Margin="5,10,0,0" BorderThickness="1"
                        VerticalAlignment="Top" HorizontalAlignment="Left" Background="#A51E1E1E" CornerRadius="8" MinWidth="650" MinHeight="216">
                    <Grid>
                        <Grid x:Name="KeyboardGrid" Margin="10,10,10,10" Height="192" VerticalAlignment="Top" HorizontalAlignment="Left" Width="803">
                            <Grid.CacheMode>
                                <BitmapCache EnableClearType="True"/>
                            </Grid.CacheMode>
                        </Grid>
                        <Label x:Name="KeyboardRecordMessage" Content="Please select key(s) you want to assign"
                               HorizontalAlignment="Right" Foreground="Red" Height="26" VerticalAlignment="Top" Margin="0,0,10,0" Padding="0" IsHitTestVisible="False"  />
                        <Border Name="RenderPauseNotice" Background="#66888888" PreviewMouseDown="RenderPauseNotice_OnPreviewMouseDown">
                            <Label Background="#AA000000" HorizontalContentAlignment="Center" VerticalAlignment="Center">Rendering paused</Label>
                        </Border>
                    </Grid>
                </Border>
            </Viewbox>
        </Grid>
    </DockPanel>
</fluentWpf:AcrylicWindow>
